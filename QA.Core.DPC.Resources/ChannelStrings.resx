<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="YourLastTask" xml:space="preserve">
    <value>Task</value>
  </data>
  <data name="Unavailable" xml:space="preserve">
    <value>Publication service is currently unavailable</value>
  </data>
  <data name="NotConsolidated" xml:space="preserve">
    <value>Current customer code is not working in consolidation mode</value>
  </data>
  <data name="NotificationSenderChanged" xml:space="preserve">
    <value>NotificationSender service settings have been changed</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>update</value>
  </data>
  <data name="SystemSettings" xml:space="preserve">
    <value>System settings</value>
  </data>
  <data name="ChannelProviderDesc" xml:space="preserve">
    <value>Defines where channel settings is persisted</value>
  </data>
  <data name="ChannelProvider" xml:space="preserve">
    <value>Channel provider</value>
  </data>
  <data name="StartTimeDesc" xml:space="preserve">
    <value>NotificationSender service start time</value>
  </data>
  <data name="StartTime" xml:space="preserve">
    <value>Service start time</value>
  </data>
  <data name="Channels" xml:space="preserve">
    <value>Channels</value>
  </data>
  <data name="Channel" xml:space="preserve">
    <value>Channel</value>
  </data>
  <data name="Queue" xml:space="preserve">
    <value>Queue</value>
  </data>
  <data name="EnqueueTime" xml:space="preserve">
    <value>Enqueue time</value>
  </data>
  <data name="PublishingTime" xml:space="preserve">
    <value>Publication time</value>
  </data>
  <data name="ProductId" xml:space="preserve">
    <value>Product Id</value>
  </data>
  <data name="PublishingStatus" xml:space="preserve">
    <value>Publication status</value>
  </data>
  <data name="ChannelStatus" xml:space="preserve">
    <value>Channel status</value>
  </data>
  <data name="GeneralSettings" xml:space="preserve">
    <value>General settings</value>
  </data>
  <data name="AutoPublicationDesc" xml:space="preserve">
    <value>Defines whether article changes should automatically be sent to fronts</value>
  </data>
  <data name="AutoPublication" xml:space="preserve">
    <value>Autopublication</value>
  </data>
  <data name="SendInterval" xml:space="preserve">
    <value>Send interval</value>
  </data>
  <data name="SendIntervalDesc" xml:space="preserve">
    <value>Interval between checks for new notifications to be sent</value>
  </data>
  <data name="ErrorSendInterval" xml:space="preserve">
    <value>Send interval while errors are occuring</value>
  </data>
  <data name="ErrorSendIntervalDesc" xml:space="preserve">
    <value>Wait interval when new notifications are not sent to current receiver</value>
  </data>
  <data name="ErrNumBeforeWait" xml:space="preserve">
    <value>Number of errors</value>
  </data>
  <data name="ErrNumBeforeWaitDesc" xml:space="preserve">
    <value>Number of errors before waiting interval</value>
  </data>
  <data name="PackageSize" xml:space="preserve">
    <value>Package size</value>
  </data>
  <data name="PackageSizeDesc" xml:space="preserve">
    <value>Number of simultaneously processed notifications</value>
  </data>
  <data name="NotifyTimeout" xml:space="preserve">
    <value>Notification timeout</value>
  </data>
  <data name="NotifyTimeoutDesc" xml:space="preserve">
    <value>Timeout of sending to front</value>
  </data>
  <data name="Important" xml:space="preserve">
    <value>Important</value>
  </data>

  <data name="ChannelState" xml:space="preserve">
    <value>Channel state</value>
  </data>
  <data name="StatusOfChannel" xml:space="preserve">
    <value>Status of channel</value>
  </data>
  <data name="StateOfChannel" xml:space="preserve">
    <value>State of channel</value>
  </data>
  <data name="ChannelQueue" xml:space="preserve">
    <value>Queue of channel</value>
  </data>
  <data name="Removed" xml:space="preserve">
    <value>was removed</value>
  </data>
  <data name="Changed" xml:space="preserve">
    <value>was changed</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>from</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>new</value>
  </data>
  <data name="Added" xml:space="preserve">
    <value>was added</value>
  </data>
  <data name="ChannelsChanged" xml:space="preserve">
    <value>There are some changes in channels with names</value>
  </data>
</root>
