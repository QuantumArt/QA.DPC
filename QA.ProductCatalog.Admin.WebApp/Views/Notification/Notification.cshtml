@using QA.ProductCatalog.Integration.Notifications
@using QA.Core.DPC.Resources
@model ConfigurationInfo

@section head {
  <link href="~/css/Notification/Notification.css" rel="stylesheet" />
}

<div id="notification"></div>

@section scripts{
  <script type="text/javascript" defer>
    window.notification = {
      strings: {
        gSettings: "@Html.Raw(ChannelStrings.GeneralSettings)",
        sSettings: "@Html.Raw(ChannelStrings.SystemSettings)",
        channelProvider: "@Html.Raw(ChannelStrings.ChannelProvider)",
        startTime: "@Html.Raw(ChannelStrings.StartTime)",
        channels: "@Html.Raw(ChannelStrings.Channels)",
        channel: "@Html.Raw(ChannelStrings.Channel)",
        queue: "@Html.Raw(ChannelStrings.Queue)",
        enqueueTime: "@Html.Raw(ChannelStrings.EnqueueTime)",
        publishingTime: "@Html.Raw(ChannelStrings.PublishingTime)",
        publishingStatus: "@Html.Raw(ChannelStrings.PublishingStatus)",
        productId: "@Html.Raw(ChannelStrings.ProductId)",
        channelStatus: "@Html.Raw(ChannelStrings.ChannelStatus)",
        notConsolidated: "@Html.Raw(ChannelStrings.NotConsolidated)",
        unavailable: "@Html.Raw(ChannelStrings.Unavailable)",
        notificationSenderChanged: "@Html.Raw(ChannelStrings.NotificationSenderChanged)",
        update: "@Html.Raw(ChannelStrings.Update)",
        autoPublication: "@Html.Raw(ChannelStrings.AutoPublication)",
        sendInterval: "@Html.Raw(ChannelStrings.SendInterval)",
        errorSendInterval: "@Html.Raw(ChannelStrings.ErrorSendInterval)",
        errNumBeforeWait: "@Html.Raw(ChannelStrings.ErrNumBeforeWait)",
        packageSize: "@Html.Raw(ChannelStrings.PackageSize)",
        notifyTimeout: "@Html.Raw(ChannelStrings.NotifyTimeout)",
        seconds: "@Html.Raw(ControlStrings.Seconds)",

        statusOfChannel: "@Html.Raw(ChannelStrings.StatusOfChannel)",
        stateOfChannel: "@Html.Raw(ChannelStrings.StateOfChannel)",
        queue: "@Html.Raw(ChannelStrings.ChannelQueue)",
        removed: "@Html.Raw(ChannelStrings.Removed)",
        changed: "@Html.Raw(ChannelStrings.Changed)",
        to: "@Html.Raw(ChannelStrings.To)",
        from: "@Html.Raw(ChannelStrings.From)",
        new: "@Html.Raw(ChannelStrings.New)",
        added: "@Html.Raw(ChannelStrings.Added)",
        channelState: "@Html.Raw(ChannelStrings.ChannelState)",
        channelsChanged: "@Html.Raw(ChannelStrings.ChannelsChanged)",
      }
    }
  </script>
  <script src="~/js/pmrpc.js"></script>
  <script src="~/js/bundles/Notification/Notification.js" defer></script>
}
