@model QA.ProductCatalog.Admin.WebApp.Models.SendProductModel

@{
    ViewBag.Title = "Отправка";
}
<div class="formLayout">
    <fieldset>
        <legend>Частичная отправка продуктов на все витрины (live и stage)</legend>
        <p>Данная утилита позволяет публиковать и отправлять продукты на витрины, <br /> 
        а также удалять с витрин архивные, невидимые или по ошибке не удаленные продукты. <br />
        В поле следует вводить список Id региональных продуктов (возможные разделители: "," ";" пробел, новая строчка)</p>

        @Html.ValidationSummary(true)
        @using (Html.BeginForm("send", "productsend"))
        {
            @Html.AntiForgeryToken()
            <div class="editor-label">
                @Html.LabelFor(model => model.Ids)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Ids, new { cols = 125, rows = 10 })
                <div>
                    @Html.ValidationMessageFor(model => model.Ids)
                </div>
            </div>
            <p>
                <input id="save" type="submit" value="Отправить продукты" />
            </p>
        }

        @if (Model != null && Model.NeedPublishing != null && Model.NeedPublishing.Length > 0)
        {
            using (Html.BeginForm("publish", "product"))
            {
                @Html.AntiForgeryToken()
                <div>
                    <h5>Часть продуктов требует публикации перед отправкой на витрины (@Model.NeedPublishing.Length) </h5>
                    <p>Чтобы опубликовать эти продукты, нажмите кнопку "Публиковать и отправить"</p>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ArticleIds)
                    </div>
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model.ArticleIds, new { cols = 125, rows = 10 })
                        <div>
                            @Html.ValidationMessageFor(model => model.ArticleIds)
                        </div>
                    </div>
                    <p>
                        @Html.HiddenFor(model => model.Ids)
                        <input id="publish" type="submit" value="Публиковать и отправить" />
                    </p>
                </div>
            }
        }

        @if (Model != null && !string.IsNullOrEmpty(Model.Message))
        {
            <div class="exception-wrapper">
                <div class="exception">
                    <div class="exception-detail">@Model.Message</div>
                </div>
            </div>
        }

        @if (Model != null && Model.Removed != null && Model.Removed.Length > 0)
        {
            <h5>Были удалены с витрин следующие продукты:</h5>
            <div>
                <ul>
                    @foreach (var item in Model.Removed)
                    {
                        <li>@item </li>
                    }
                </ul>
            </div>
        }
        
        @if (Model != null && Model.NotFound != null && Model.NotFound.Length > 0)
        {
            <h5>В DPC не были найдены следующие продукты:</h5>
            <div>
                <ul>
                    @foreach (var item in Model.NotFound)
                    {
                        <li>@item </li>
                    }
                </ul>
            </div>
        }
    </fieldset>
</div>





<script>
    $(function () {
        $('#save').click(function () {
            $('.loadingLayer').removeClass('hidden');
        });

        $('#publish').click(function () {
            $('.loadingLayer').removeClass('hidden');
            // аякс-запрос
        });
    });
</script>