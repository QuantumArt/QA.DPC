@using System.Globalization
@using QA.Core.DPC.Resources
@using QA.Core.Models.Configuration
@model QA.ProductCatalog.Admin.WebApp.Models.DefinitionEditor

  <script>
  window.definitionEditor = {
    xml: "@Model.Xml",
    saveToDb: '@(Model.ContentItemId.HasValue ? "true" : "false")',
    saveDefinitionUrl: '@Url.Action("SaveDefinition", new {content_item_id = Model.ContentItemId})',
    getSingleNodeUrl: '@Url.Action("GetSingleNode")',
    getDefinitionLevelUrl: '@Url.Action("GetDefinitionLevel")',
    editBetaUrl: '@Url.Action("EditBeta")',
    saveFieldUrl: '@Url.Action("SaveField")',
    saveFieldBetaUrl: '@Url.Action("SaveFieldBeta")',
    editUrl: '@Url.Action("Edit")',
    strings: {
      DictionaryCachingSettings: '@Html.Raw(ControlStrings.DictionaryCachingSettings)',
      MissingInQP: '@Html.Raw(ControlStrings.MissingInQp)',
      NotInDefinition: '@Html.Raw(ControlStrings.NotInDefinition)',
      Apply: '@Html.Raw(ControlStrings.Apply)',
      Refresh: '@Html.Raw(ControlStrings.Refresh)',
      SaveAndExit: '@Html.Raw(ControlStrings.SaveAndExit)',
      Exit: '@Html.Raw(ControlStrings.Exit)',
      WrapLines: '@Html.Raw(ControlStrings.WrapLines)',
      QueryOnClick: '@Html.Raw(ControlStrings.QueryOnClick)',
      Close: '@Html.Raw(ControlStrings.Close)',
      ExitAnyway: '@Html.Raw(ControlStrings.ExitAnyway)',
      BackToEditing: '@Html.Raw(ControlStrings.BackToEditing)',
      HideLog: '@Html.Raw(ControlStrings.HideLog)',
      ShowLog: '@Html.Raw(ControlStrings.ShowLog)',
      SameDefinition: '@Html.Raw(ControlStrings.SameDefinition)',
      JsonFieldName: '@Html.Raw(ControlStrings.JsonFieldName)',
      FieldName: '@Html.Raw(ControlStrings.FieldName)',
      FieldNameForCard: '@Html.Raw(ControlStrings.FieldNameForCard)',
      RelationConditionDescription: '@Html.Raw(ControlStrings.RelationConditionDescription)',
      Path: '@Html.Raw(ControlStrings.Path)',
      RemovePath: '@Html.Raw(ControlStrings.RemovePath)',
      Converter: '@Html.Raw(ControlStrings.Converter)',

      DontWrapInCData: "@Html.Raw(ControlStrings.DontWrapInCData)",
      LoadAsImage: '@Html.Raw(ControlStrings.LoadAsImage)',
      LabelText: '@Html.Raw(ControlStrings.LabelText)',
      FieldId: '@Html.Raw(ControlStrings.FieldId)',
      InDefinition: '@Html.Raw(ControlStrings.InDefinition)',
      DeletingMode: '@Html.Raw(ControlStrings.DeletingMode)',
      UpdatingMode: '@Html.Raw(ControlStrings.UpdatingMode)',
      CloningMode: '@Html.Raw(ControlStrings.CloningMode)',
      PublishingMode: '@Html.Raw(ControlStrings.ProductIdListToPublish)',
      PreloadingMode: '@Html.Raw(ControlStrings.PreloadingMode)',
      RelationCondition: '@Html.Raw(ControlStrings.RelationCondition)',
      ClonePrototypeCondition: '@Html.Raw(ControlStrings.ClonePrototypeCondition)',
      RelationConditionDescription: '@Html.Raw(ControlStrings.RelationConditionDescription)',
      ClonePrototypeConditionDescription: '@Html.Raw(ControlStrings.ClonePrototypeConditionDescription)',
      DefaultCachePeriod: '@Html.Raw(ControlStrings.DefaultCachePeriod)',
      LoadAllPlainFields: '@Html.Raw(ControlStrings.LoadAllPlainFields)',
      IsReadOnly: '@Html.Raw(ControlStrings.IsReadOnly)',
      ContentName: '@Html.Raw(ControlStrings.ContentName)',
      ProceedCaching: '@Html.Raw(ControlStrings.ProceedCaching)',
      CacheSettings: '@Html.Raw(ControlStrings.CacheSettings)',
    },
    backendEnums: {
      update: '/Resource/GetUpdateEnum',
      publish: '/Resource/GetPublishEnum',
      preload: '/Resource/GetPreloadEnum',
      delete: '/Resource/GetDeleteEnum',
      clone: '/Resource/GetCloneEnum',
    },
  };
  </script>
<div id="definitionEditor"></div>
<script src="~/js/pmrpc.js"></script>
<script src="~/js/bundles/DefinitionEditor/DefinitionEditor.js"></script>