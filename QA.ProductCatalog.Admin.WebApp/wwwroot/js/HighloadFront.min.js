function TasksViewModel(){var n=this;n.tasks=ko.observableArray();n.index=function(n){indexChanel(n.ChannelLanguage,n.ChannelState)};n.getState=function(n){return getTaskStateDescription(n.TaskState)};n.getProgress=function(n){return(n.TaskState||0)+"%"};n.isButtonVisible=function(n){return n.TaskState!=1&&n.TaskState!=2}}function updateTasks(n){$.getJSON(Url.Content("~/HighloadFront/GetSettings?customerCode="+getCustomerCode()+"&url=api/sync/settings"),function(n){model.tasks(n)});n&&setTimeout(function(){updateTasks(n)},5e3)}function getCustomerCode(){return $("#tasks").data("customerCode")}function indexChanel(n,t){$.post(Url.Content("~/HighloadFront/IndexChanel?customerCode="+getCustomerCode()+"&url=api/sync/"+n+"/"+t+"/reset")).done(function(){updateTasks(!1)})}function getTimePassed(n,t){var i=n||t;return i?moment(i).fromNow():null}function getDate(n){return n?moment(n).calendar():null}function getTaskStateDescription(n){return n==null?null:n==1?"New":n==2?"Running":n==3?"Done":n==4?"Failed":n==5?"Cancelled":null}var model=new TasksViewModel;ko.bindingHandlers.updateProgress={init:function(n,t,i,r){$(n).attr("style","width:"+(r.TaskState||0)+"%")},update:function(n,t,i,r){$(n).attr("style","width:"+(r.TaskState||0)+"%")}};$(document).ready(function(){ko.applyBindings(model);updateTasks(!0)});